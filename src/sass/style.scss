
body {
  // -apple-system, blinkmacsystemfont, Segoe UI : OSによって最適なシステムフォントを選択
  font-family: Noto Sans JP, -apple-system, blinkmacsystemfont, Segoe UI, Hiragino Kaku Gothic ProN, BIZ UDPGothic, meiryo, sans-serif;
  // "root em" の略で、ルート要素（通常は <html> 要素）のフォントサイズに対する相対的な大きさ
  // ルート要素のフォントサイズが 16px に設定されている場合、1rem は 16px
  font-size: 1.0625rem;
  // フォントの太さ400（標準）
  font-weight: 400;
  // わずかに文字間を開ける
  // 例えば、body 要素の font-size が 1.0625rem であった場合
  // .02em はその 0.02倍 の長さの間隔が各文字の間に追加
  letter-spacing: .02em;
  // 行の高さを1.7
  line-height: 1.7;
  // テキストの透明度を1（不透明）
  --tw-text-opacity: 1;
  // テキストカラー（透明度を--tw-text-opacityの値に基づいて調整）
  color: rgb(51 51 51 / var(--tw-text-opacity));
  // 表示形式flexboxレイアウト
  display: flex;
  // flexbox縦方向
  flex-direction: column;
  /* ブラウザのウィンドウサイズを変更すると、ビューポートの高さの100％相当に変更される
     つまり現在のブラウザウィンドウの高さ全体を表す
     ウェブページのコンテンツがどれだけ少なくても、
     <body> 要素の高さは常にブラウザウィンドウの高さ全体を占める*/
  min-height: 100vh;
}

/* -------------------------------------------------
ヘッダー 
----------------------------------------------------*/

header {
  // 白色（100%明度）で透明度88%
  background-color: hsla(0, 0%, 100%, .88);
  // ヘッダーを スクロールに応じて固定
  position: sticky;
  // 上端（top）を基準に 0pxの位置
  top: 0;
  // ヘッダーの重なり順を最前面に指定
  z-index: 1;
}

.header__inner {
  // ヘッダーの内部コンテナを親要素内で水平方向に中央揃え
  margin-left: auto;
  margin-right: auto;
  // ヘッダーの内部コンテナが画面幅いっぱいに広がりすぎないように
  max-width: 90rem;
  // コンテンツが画面の端にぴったりと表示されないように
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  // ヘッダーの内部コンテナが親要素の幅いっぱいに広がるように
  width: 100%;
}

// タイトルを左側、ドロップダウンメニューを右側に配置
.header__content {
  // 垂直方向の中央に配置
  align-items: center;
  display: flex;
  height: var(--header-block-size);
  // ヘッダーコンテンツ内のアイテムを左右両端に配置し、中央にスペースを空ける
  justify-content: space-between;
}

// 中央揃え
// ヘッダーの項目、「ホーム」と区切り線、地球儀と「Language」と下矢印
.header__nav, .header-menu, .language-selector__button {
  display: flex;             
  align-items: center;       
  gap: .5rem;
}

// ヘッダーのタイトルのフォント、配置設定
.header-title {
  margin-left: auto;
  margin-right: auto;
  font-size: 1.5rem;
  font-weight: 700;
  letter-spacing: .02em;
  width: 100%;
}

// 最初は非表示（画面サイズによって変更）
.header__menu--desktop-only, .header-menu__item.header-menu__item--divider {
  display: none;
}

/* -------------------------------------------------
ヘッダーメニューバー
----------------------------------------------------*/

// 「ホーム」
.header-item {
  align-items: center;
  // 要素の角を可能な限り丸くして、要素を完全な円形または楕円形にする
  border-radius: calc(infinity* 1rem);
  // テキスト、アイコンを横並び
  display: flex;
  font-size: .875rem;
  font-weight: 400;
  gap: .5rem;
  letter-spacing: .02em;
  line-height: 1;
  min-height: 2rem;
  padding: .5rem;
  text-align: center;
  text-wrap: nowrap;
}

.header-item:hover {
  outline-color: #000;
  outline-style: dashed;
  outline-width: 1px;
}

/* -------------------------------------------------
各ページ、各項目のタイトル
----------------------------------------------------*/
// 各項目のタイトル
.section {
  // margin-bottom: 2rem;
  margin-top: 2rem;
}

.section:nth-child(2) {
  margin-top: 0;
}

// メインの各項目のヘッダー
.section__header {
  align-items: center;
  display: flex;
  gap: .75rem;
  justify-content: space-between;
  margin-bottom: 1rem;
  // headerのz-index:1が適用されるように、main.sectionにも指定
  z-index: auto;
}

// メインの各項目のタイトルフォント
.section__title {
  font-size: 1.375rem;
  font-weight: 700;
  letter-spacing: .02em;
  line-height: 1.5;
}

// トップの見出しの内容全体（お知らせなど）
.attention {
  list-style-type: disc;
  margin-bottom: 1rem;
  margin-top: 1rem;
  padding-left: 2rem;
}

// トップの見出しの内容一つ一つ
/* .attention-item__link クラスを持つ要素のうち、
.attention-item__text--isInformation クラスを持つ子要素が対象
:has() は、指定されたセレクターを持つ要素を選択、古いブラウザではサポートされていない場合がある
:hover により、マウスが要素の上にある状態を指定
*/
.attention-item__link:has(.attention-item__text--isInformation), .attention-item__link:not(.no-link):has(.attention-item__text--isInformation):hover {
  // テキストの透明度を 1にして、
  --tw-text-opacity: 1;
  // 特定の濃い青色にする
  color: rgb(0 17 143 / var(--tw-text-opacity));
}
// .attention-item__link クラスを持ち、.no-link クラスを持たない要素
.attention-item__link:not(.no-link) {
  // テキストに下線
  text-decoration-line: underline;
  // テキストから下線の距離を調整
  text-underline-offset: .1875rem;
}

/* -------------------------------------------------
入力（ニックネーム、プロジェクト名）
----------------------------------------------------*/
.project-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  margin-top: 2rem;
}

// 説明
.card__project {
  width: 100%;
  max-width: 30rem;
  min-width: 0;
  border-radius: 0.5rem;
  border: 1px solid #000;
  box-sizing: border-box;
  // カードのコンテンツがカードの領域を超えた場合に、超えた部分を非表示
  overflow: hidden;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

// 入力
.form__input-field {
  padding-left: 14px;
  padding-right: 14px;
  padding-top: 5px;
  padding-bottom: 16px;
  flex-wrap: wrap;
}

// [必須][入力枠]まとめたボックス
.form__label {
  max-width: inherit;
  display: flex;
  align-items: center;
  letter-spacing: 0.05em;
}

// 必須ラベル
.form__label-badge {
  border-radius: 0.25rem;
  margin-right: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  width: 2.5rem;
  text-align: center;
  background: #5bc8ac;
  color: #fff;
  font-size: 0.8rem;
}


// 入力枠とボタン
.form__project-create {
  align-content: center;
}

// 入力枠
.form__input--name {
  border-radius: 0.5rem;
  border: 1px solid #ddd;
  margin-left: 1rem;
  margin-top: 1rem;
  padding-left: 1em;
  padding-right: 1em;
  height: 40px;
  flex: inherit;
  font-size: 15px;
}

// 作成ボタン
.create-button {
  border-radius: 0.25rem;
  margin-left: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  width: 2.5rem;
  text-align: center;
  background-color: #5b62c8; 
  color: #ffffff;
  cursor: pointer;
  font-size: 0.8rem;
}

.create-button:hover {
  background-color: #c8a55b;  
}

.button__project-create {
  border-radius: 0.25rem;
  margin-left: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  width: 2.5rem;
  text-align: center;
  background-color: #c8a55b;  
  color: #ffffff;
  cursor: pointer;
  font-size: 0.8rem;
}

.loading-animation::after {
  content: '...';
  animation: dots 1s steps(3, end) infinite;
}

@keyframes dots {
  0% { content: ''; }
  33% { content: '.'; }
  66% { content: '..'; }
  100% { content: '...'; }
}


/* -------------------------------------------------
管理画面
----------------------------------------------------*/
// タイトルテキスト
.section__admin-text {
  font-size: 1.2rem;
}
.automatic-deletion-text{
  font-size: 1rem;
  margin-top: 2.3rem;
}

// 管理画面注意事項のテキスト
.precautions-text {
  color: #c86b5b;
}

.card__URL{
  // カードの角を丸
  border-radius: 0.5rem;
  // カードの枠線の幅を1ピクセル
  border-width: 1px;
  display: grid;
  height: 100%;
  width: 100%;
  // カードのコンテンツがカードの領域を超えた場合に、超えた部分を非表示
  overflow: hidden;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.card__body-URL {
  padding: 0.5rem;
}

.card__title-URL {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap;
}

// URL表示
.voteUrl, .resultUrl, .adminUrl {
  border-radius: 0.25rem;
  border: 1px solid #ddd;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  width: 100%;
  max-width: 100%;  /* はみ出し防止 */
  min-width: 100%; /* はみ出し防止 */
  box-sizing: border-box; /* padding, borderも含めた幅にする */
  text-align: center;
  font-size: 0.8rem;
}

// ボタン
.button__text-voteUrlCopy,
.button__text-resultUrlCopy,
.button__text-adminUrlCopy,
.button__reset-nickname,
.button__delete-project {
  border-radius: 0.25rem;
  margin-left: 0.5rem;
  padding: 0.2em;
  // padding-top: 0.5rem;
  // padding-bottom: 0.5rem;
  width: 3.1rem;
  height: 2rem;
  text-align: center;
  background-color: #5b62c8; 
  color: #ffffff;
  cursor: pointer;
  font-size: 0.8rem;
  font-weight: bold;
}

.button__text-voteUrlCopy,
.button__text-adminUrlCopy {
  display: flex;
  justify-content: center;
  align-items: center;
}

// 投票済みユーザ
.user-row {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1rem;
}

.button__reset-nickname {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.2em;
  height: 2rem;
  width: 2rem;
}

.button__delete-project {
  margin-top: 0.5rem;
  height: 2.5rem;
  width: 5rem;
  background-color: #c85b5b; 
}

.button__text-voteUrlCopy:hover,
.button__text-adminUrlCopy:hover,
.button__reset-nickname:hover,
.button__delete-project:hover {
  background-color: #c8a55b;  
}

/* -------------------------------------------------
投票画面
----------------------------------------------------*/
// タイトルテキスト
.section__main-text {
  font-size: 1.2rem;
}
// 説明の図
.selection-example-figure {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0.5rem;               
}

// 数字ボタンの図
.number-figure {
  padding: 10px 15px; 
  margin: 5px; 
  border: none; 
  border-radius: 4px; 
  background-color: #5b62c8; 
  color: #ffffff;
  cursor: pointer;
}

// リセットボタンの図
.reset-button-figure {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  gap: 0.5rem;  
}

.reset-button-text {
  border-radius: 0.25rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  width: 5rem;
  text-align: center;
  background: #c85b5b;
  color: #fff;
  font-size: 0.8rem;
}

.template__main {
  margin: 3rem auto 9rem;
  max-width: 77.375rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  width: 100%;
}

/* -------------------------------------------------
カード形式のデザイン
----------------------------------------------------*/
.card {
  // カードの角を丸
  border-radius: 0.5rem;
  // カードの枠線の幅を1ピクセル
  border-width: 1px;
  display: grid;
  height: 100%;
  width: 100%;
  max-width: 40rem;
  // カードのコンテンツがカードの領域を超えた場合に、超えた部分を非表示
  overflow: hidden;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.card__body {
  // display: grid;
  // gap: 2rem;
  // grid-template-columns: 1fr 24px;
  // grid-template-rows: min-content 1fr;
  // カードの文字の中身を中央揃え
  text-align: center;
  padding: 0.5rem;
}

/* カード内に画像がある場合に、グリッドレイアウトの行のサイズを調整
    1. 最初の行（画像の行など）は、コンテンツの最小サイズで表示されます。
    2. 2番目の行（コンテンツの行）は、残りのスペースをすべて埋めて表示されます。*/
.card:has(.card__image) {
  // 行の高さをコンテンツの最小の高さ、残りのスペースを1つの行に割り当て
  grid-template-rows: min-content 1fr;
}

// アンダーライン
.card__pointtable__title {
  border-bottom: 1px solid #ddd;
}

// ポイント入力枠
.point-input {
  border-radius: 0.5rem;
  border: 1px solid #ddd;
  padding-left: 0.5rem;
  width: 5rem;
  -webkit-box-flex: inherit;
  -ms-flex: inherit;
  flex: inherit;
}

.anchor-card, a.card {
  --tw-text-opacity: 1;
  color: rgb(51 51 51 / var(--tw-text-opacity));
  text-decoration-line: none;
}

.card__image {
  border-bottom-width: 1px;
  overflow: hidden;
  --tw-border-opacity: 1;
  border-bottom-color: rgb(0 0 0 / var(--tw-border-opacity));
}

/* -------------------------------------------------
カード
----------------------------------------------------*/
// .stack {
//   display: grid;
// }

// .stack--medium {
//   gap: 1rem;
// }

.stack {
  display: flex;               /* 縦に積む形 */
  flex-direction: column;
  align-items: center;         /* 子要素の中央揃え */
  gap: 1rem;
  width: 100%;
  max-width: 100%;
  padding: 0 1rem;             /* モバイル時の左右余白を確保 */
  box-sizing: border-box;
}
.stack > li {
  width: 100%;
  display: flex;
  justify-content: center;
}
.stack--medium {
  gap: 1rem;
}

/* -------------------------------------------------
数字選択
----------------------------------------------------*/
// 選択n回目 
.section__number-title {
    font-size: 1.375rem;
    font-weight: 700;
    letter-spacing: .02em;
    line-height: 1;
    margin-top: 2rem;
}

// 選択ランク表示 
.selected-ranking {
  font-size: 1rem;
  margin-left: 1rem;
}

// リセットボタン
.reset-button {
  border-radius: 0.25rem;
  margin-left: 6rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  width: 5rem;
  text-align: center;
  background: #c85b5b;
  color: #fff;
  font-size: 0.8rem;
}

// 数字が選択されていない場合は、リセットボタンを非表示
.reset-button[aria-expanded="false"] {
  display: none;
}

button {
  padding: 10px 15px;
  margin: 5px;
  border: none;
  border-radius: 4px;
  background-color: #5b62c8;
  color: #ffffff;
  cursor: pointer;
}

// 数字ボタン
.number-button {
  padding: 10px 15px; 
  margin: 5px; 
  border: none; 
  border-radius: 4px; 
  background-color: #5b62c8; 
  color: #ffffff;
  cursor: pointer;
}

.number-button:hover {
  background-color: #c8a55b;  
}

.number-button.selected {
  background-color: #c8a55bc9 !important;
  color: #fff !important;
  border: 1px solid #5b62c8;
}

// 選択されて、表示される文字列（例：2位：15）
.selected-ranking__text {
  margin-right: 1rem
}

/* -------------------------------------------------
投票ボタン
----------------------------------------------------*/
// 投票全体のコンテナ
.vote-button {
  padding: 10px 15px;
  margin: 5px;
  text-align: center;
  margin-top: 20px;
}

// ボタン凹み背景部分
.vote-button__dent {
  mix-blend-mode: multiply;
  display: inline-block;
  position: relative;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background: 
      radial-gradient(#FFF 0.1%, #72736f 20%, #bfbfbf 100%);
    background-size: 400% 400%;
    background-position: 44% 55%;
}

// 実際の投票ボタン（クリック領域）
.vote-button__action  {
  position: relative;
  width: 100%;
  height: 100%;
  border: none;
  background: transparent;
}

// ボタンの見た目、エフェクトなど
.vote-button__surface {
  position: absolute;
  content: '';
  width: 70px;
  height: 70px;
  left: 15px;
  top: 15px;
  border-radius: 50%;
  background-color: #ffffff80;
  background-image: url("../images/Button/vote.png");
  background-size: 70%;
  background-repeat: no-repeat;
  background-position: center;
  box-shadow: 0 0 0 1px #EADAB6;
}

// ホバー時の装飾
.vote-button__surface:hover {
  background-color: #ffffff62;
  background-image: url("../images/Button/vote.png");
  background-size: 70%;
  background-repeat: no-repeat;
  background-position: center;
 box-shadow: 0 0 0 1px #FFFEF7;
}

// クリック時の状態変更
.vote-button__surface:active {
  width: 68px;
  height: 68px;
  left: 16px;
  top: 16px;
  // 半透明の黄色
  background:
  radial-gradient(circle, rgb(242, 205, 77,0.2), rgb(218, 181, 103, 0.2));
    background-color: #ffffffc0;
    background-image: url("../images/Button/vote.png");
    background-size: 65%;
    background-repeat: no-repeat;
    background-position: center;
    box-shadow: inset 0 0 0 2.5px rgba(66, 66, 66, 0.25); 
}

/* -------------------------------------------------
フッター
----------------------------------------------------*/
// フッター全体のコンテナ周り
.footer__inner {
  margin-top: 2rem;
  margin-left: auto;
  margin-right: auto;
  max-width: 77.375rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  width: 100%;
}

// フッター全体のコンテナ
.footer__content {
  display: grid;
  gap: 2rem;
  width: 100%;
}

// フッターの各項目全体
.footer__nav {
  width: 100%;
}

// フッターの各項目のリスト
.footer-nav__list {
  font-size: 1rem;
  font-weight: 400;
  letter-spacing: .02em;
  line-height: 1.7;
}

// フッターの各項目
.footer-nav__item {
  margin-bottom: 1rem;
}

// サイトポリシーなどのフッターのリンク
.footer-nav__link {
  margin-left: -.125rem;
  margin-right: -.125rem;
  padding-left: .125rem;
  padding-right: .125rem;
  text-decoration-line: underline;
  text-underline-offset: .1875rem;
}

.sns--img {
    height: 2rem;
    width: 2rem;
}

/* -------------------------------------------------
画面前面にある要素
----------------------------------------------------*/

// 画面右下に常にあるトップに戻れるボタン
.template__pagetop {
  display: flex;
  // ページトップボタンを右側に配置
  justify-content: flex-end;
  padding-right: 1.25rem;
  pointer-events: none;
  // width: 100vw;
}

.pagetop, .pagetop:hover {
    --tw-border-opacity: 1;
    --tw-bg-opacity: 1;
    --tw-text-opacity: 1;
}

.pagetop {
    align-items: center;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
    border-color: rgb(0 23 193 / var(--tw-border-opacity));
    border-radius: 624.9375rem;
    border-width: 1px;
    border-style: solid;
    bottom: 1.25rem;
    color: rgb(0 23 193 / var(--tw-text-opacity));
    cursor: pointer;
    display: flex;
    height: 4rem;
    justify-content: center;
    pointer-events: auto;
    position: fixed;
    width: 4rem;
}

.pagetop:hover {
  background-color: #5b62c859; 
}

.icon--16px {
    height: 1rem;
    width: 1rem;
}

/* ---------------------------------------------
投票結果
------------------------------------------------- */
// タイトルテキスト
.section__results-text {
  font-size: 1.2rem;
}

.round, .points {
  font-size: 1rem;
  font-weight: 700;
  letter-spacing: .02em;
  line-height: 2rem;
  margin-top: 0.5rem;
}
.round__rankings, .points__rankings {
  display: grid;
  gap: 1rem;
  // カードの角を丸
  border-radius: 0.5rem;
  // カードの枠線の幅を1ピクセル
  border-width: 1px;
  display: grid;
  height: 100%;
  // カードのコンテンツがカードの領域を超えた場合に、超えた部分を非表示
  overflow: hidden;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding: 0.5rem;
  margin-top: 0.5rem;
}

.round__rankings p, .points__rankings p {
  overflow-x: auto;
  white-space: pre-wrap;
}

.vote__section {
  margin-bottom: 2rem;
}

.point-text {
  font-size: 0.875rem;
}

.point__card {
  // カードの角を丸
  border-radius: 0.5rem;
  // カードの枠線の幅を1ピクセル
  border-width: 1px;
  display: grid;
  width: 20rem;
  height: 100%;
  // カードのコンテンツがカードの領域を超えた場合に、超えた部分を非表示
  overflow: hidden;
  --tw-border-opacity: 1;
  border-color: rgb(0 0 0 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.point-confirm-button {
  padding: 0.275rem; 
  margin: 0.5rem; 
  margin-left: 1.5rem;
  border: none; 
  border-radius: 4px; 
  background-color: #5b62c8; 
  color: #ffffff;
  cursor: pointer;
  font-size: 0.8rem;
}

.highlight-yellow {
  color: #c8b45b;
  font-weight: bold;
}

.highlight-blue {
  color: #5b62c8;
  font-weight: bold;
}

.highlight-brown {
  color: #c87a5b;
  font-weight: bold;
}
.sns__line {  
  font-size: 1rem;
  display: inline-flex; /* テキストとSVGを横並びにする */
  align-items: center; /* テキストとSVGを縦方向に中央揃え */
}

.line-share svg {
  flex-shrink: 0; /* SVGのサイズを固定 */
}

.line-share:hover {
  cursor: pointer;
}


/* ---------------------------------------------
レスポンシブデザイン
------------------------------------------------- */

// 画面が「48em（約768px）」以上
@media (min-width: 48em) {
  // 各項目のヘッダー
  .section__header {
    // 子要素を左揃え
      justify-content: flex-start;
      margin-bottom: 1.5rem;
  }
  // 名前入力のdiv
  .form__name-field {
    padding-top: 0px;
    padding-bottom: 24px;
    width: 100%;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #ddd;
  }
  
  // [必須][ニックネーム]まとめたボックス
  .form__label {
    width: 100%;
    // max-width: 248px;
    letter-spacing: 0.05em;
    font-weight: bold;
    font-size: 18px;
  }
  //必須ラベル
  .form__label-badge { 
    border-radius: 6px;
    margin-right: 8px;
    padding-top: 8px;
    padding-bottom: 8px;
    width: 48px;
    display: inline-block;
    text-align: center;
    background: #5bc8ac;
    color: #fff;
    font-size: 14px;
  }
  // ニックネーム入力
  .form__input--name {
    border: 1px solid #ddd;
    border-radius: 6px;
    margin-left: 10px;
    padding-left: 1em;
    padding-right: 1em;
    height: 48px;
    flex: 1;
    max-width: 410px;
    background: #eaedf2;
    font-size: 18px;
  }
  // 作成ボタン
.create-button {
  border-radius: 0.25rem;
  margin-left: 1rem;
  padding-top: 0.65rem;
  padding-bottom: 0.65rem;
  width: 4rem;
  font-size: 1rem;
}
  // フッターのコンテナ
  .footer__content {
    // grid-template-columns: min-content 1fr;
    justify-items: start;
}
  // フッターの各項目のリスト
  .footer-nav__list {
    column-count: 2;
    font-size: .875rem;
    font-weight: 400;
    gap: 2.25rem;
    letter-spacing: .02em;
    line-height: 1;
}
}

// 画面が「64em（約1024px）」以上
@media (min-width: 64em) {
  .header__nav {
    // 右に少し詰める(マイナスマージン)
      margin-inline-end: -.3125rem;
  }
  // 1024px（64em）以上なら表示（「すべてのメニュー」以外の項目も表示）
  .header__menu--desktop-only {
    display: block;
  }
  // 親<div>ヘッダードロップダウン 
  .header-dropdown {
    border-top-width: 0;
    // ヘッダーとドロップダウンの間に隙間が空かないように
    top: 3.7rem;
  }
  // ドロップダウンコンテナ
  .header-dropdown__container {
    padding-bottom: 3.5rem;
    padding-top: 2rem;
  }
  // ドロップダウンコンテナの内側
  .header-dropdown__content {
    display: grid;
    gap: 0;
    grid-template-columns: 3fr 1fr;
  }
  // ドロップダウンコンテナの各項目
  .header-dropdown-list {
    // グリッドの 列同士の間隔
    column-gap: 1.625rem;
    // 要素を「マス目」のように配置
    display: grid;
    // 横方向に並べる
    grid-auto-flow: column;
    // 4行分のスペースを定義し、各行が等間隔
    grid-template-rows: repeat(4, minmax(0, 1fr));
  }
  // ドロップダウンコンテナの「ホーム」「Language」などは画面が1024px以上ならメインメニューに表示
  .header-dropdown__menu--mobile-only {
    display: none;
  }
  // <div>ドロップダウンコンテナの右側に作るサブメニューコンテナ
  .header-dropdown__menu--divider {
    border-left-width: 1px;
    margin-left: 3.5rem;
    padding-left: 3.5rem;
  }
  // <ul>ドロップダウンコンテナの右側に作るサブメニュー各項目
  .header-dropdown__quartary-menu .header-dropdown-list__external-link, 
  .header-dropdown__quartary-menu .header-dropdown-list__link {
    padding-left: .75rem;
    padding-right: .75rem;
  }
  // フッターのコンテナ
  .footer__content {
    grid-template-columns: repeat(12, minmax(0, 1fr));
    min-height: 8.5rem;
}
  // フッターの各項目の全体
  .footer__nav {
    grid-column: span 4 / span 4;
}
}

// 画面が「80em（約1280px）」以上
@media (min-width: 80em) {
  // 子要素の間に 0.875rem の隙間
  .header-menu {
      gap: .875rem;
  }
  // 1280px（80em）以上なら表示
  .header-menu__item.header-menu__item--divider {
    display: block;
  }
}


/* ---------------------------------------------
デザインの統一性
・デフォルトの変数を設定
・親要素のスタイルと統一
参考
:root:      <html>要素のみを対象
            例えば、ウェブサイトの主要な色、フォント、間隔などをCSS変数として:rootに定義し、他のCSSルールから参照
::backdrop: 全画面表示(フルスクリーン)要素の背後に表示される疑似要素
            <video>要素全画面表示時やモーダルダイアログの背後にあるコンテンツを暗くしたり、ぼかしたり、その他の視覚効果を加えたりするために使用
::marker:   リストのマーカーに対してスタイルを適用
!important; 重要度を持つプロパティを設定
            他のスタイルよりも優先される
------------------------------------------------- */

/* HTMLの<button>要素はもちろん、role="button"が付与された要素に適用 */
[role=button], button {
  /* ポインター（手の形）*/
  cursor: pointer;
}

:root {
--header-block-size: 4.5rem;
}

/* リストのマーカーに対してスタイルを適用 */
::marker {
  // マーカーが周囲のテキストの双方向性に影響を受けない
  unicode-bidi: isolate;
  // 数字の幅を固定幅にし、縦に並べたときに桁が揃う
  font-variant-numeric: tabular-nums;
  // 自動的に大文字や小文字に変換されない
  text-transform: none;
  // テキスト方向の開始位置に配置するための設定、通常は左寄せ
  text-indent: 0px !important;
  text-align: start !important;
  // テキストの最後の行が、text-align プロパティと同じ配置方法を使用
  text-align-last: auto !important;
}

// アイコン（SVG）
.icon {
  // 親要素の color で指定された色を使う
  fill: currentColor;
  // 最小限の行の高さを指定し、アイコンの上下余白をなくす
  line-height: 1;
}

/* フォーム要素のスタイルを親要素のスタイルと統一 */
button, input, optgroup, select, textarea {
  // 文字色を親要素から継承
  color: inherit;
  // フォントファミリーを親要素から継承
  font-family: inherit;
  // フォント機能設定を親要素から継承
  font-feature-settings: inherit;
  // フォントサイズを親要素のフォントサイズの100%に設定
  font-size: 100%;
  // フォントバリエーション設定を親要素から継承
  font-variation-settings: inherit;
  // フォントの太さを親要素から継承
  font-weight: inherit;
  // 文字間隔を親要素から継承
  letter-spacing: inherit;
  // 行の高さを親要素から継承
  line-height: inherit;
  // 外側の余白（マージン）を0に設定
  margin: 0;
  // 内側の余白（パディング）を0に設定
  padding: 0;
}

/* フォーム要素のスタイルを親要素のスタイルと統一 */
audio, canvas, embed, iframe, img, object, svg, video {
  // 要素が横までいっぱいに広がり、縦に並んでいく
  display: block;
  // vertical-align: middle;
}

menu, ol, ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

// カード全体の上下のマージンとカードの間隔
.timeline .columns {
  display: grid;
  gap: 2rem;
  margin-top: 1.5rem;
}

.columns {
  display: grid;
  gap: 2rem;
}

blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre {
  margin: 0;
}

h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  text-decoration: inherit;
}

// メイン画像の設定
article .mdcontainer-card__thumb, 
div.preview .mdcontainer-card__thumb, 
div.preview-block .mdcontainer-card__thumb {
  border-bottom-width: 1px;
  // 子要素がはみ出しても見えない
  overflow: hidden;
  // 以下の不透明度のデフォルト値
  --tw-border-opacity: 1;
  // 下線の色を黒（RGB 0 0 0）＋不透明度
  border-bottom-color: rgb(0 0 0 / var(--tw-border-opacity));
}

/* ---------------------------------------------
アクセシビリティ対応
視覚的には非表示でも、
スクリーンリーダーでは読み上げ対象になる要素にフォーカス
------------------------------------------------- */
[hidden] {
  display: none;
}

// 視覚的に隠しつつ、スクリーンリーダーなどの支援技術には認識させる
.u-visually-hidden {
  height: 1px;
  margin: -1px;
  // 要素の内容が要素のボックスからはみ出さないようにする
  overflow: hidden;
  padding: 0;
  // 配置方法、絶対配置：要素はドキュメントフローから外れ、他の要素のレイアウトに影響を与えない
  position: absolute;
  width: 1px;
  // 要素の表示領域を完全に0ピクセルに設定し、視覚的に見えなくする
  clip: rect(0, 0, 0, 0);
  border-width: 0;
  // 要素内のテキストが折り返されない
  white-space: nowrap;
}

/* ---------------------------------------------
リセットCSS

参考
*:      すべての<html>要素だけでなく、<body>、<div>、<p>など、ウェブページ内のすべての要素が対象
        すべての要素のボックスモデルをborder-boxに変更したり、マージンやパディングをリセットしたりする場合に使用
after:  疑似要素（要素の最後に追加される内容）
before: 疑似要素（要素の最初に追加される内容）
where:  セレクタリストを受け取り、その中のいずれかのセレクタに一致する要素を選択
        セレクタの特異度が 0 になるため、後から別のセレクタでスタイルを定義した場合に、特異度による競合が発生しにくくなる
------------------------------------------------- */

/* ボーダーおよびボックスの統一 */
*, :after, :before {
  /*  0:       ボーダーを非表示
      solid:   実線
      #e5e7eb: 薄い灰色
      すべての要素からデフォルトのボーダーを削除し、必要に応じて後から追加 */
  border: 0 solid #e5e7eb;
  /* border-box
  要素の幅と高さにパディングとボーダーが含まれるため計算しやすい。
  そのため、パディングやボーダーを追加しても、要素のサイズは変わらない
  レスポンシブデザインに対応しやすい
   */
  box-sizing: border-box;
}

/* ボタンのデザインをリセット */
// <input>要素のうち、typeがbutton, typeがreset, typeがsubmitである要素を選択
button, input:where([type=button]), input:where([type=reset]), input:where([type=submit]) {
  // <button>要素や<input type="button">などの要素が、ブラウザのデフォルトのボタンのスタイルで表示
  -webkit-appearance: button;
  // 上記互換性のために追加
  appearance: button;
  // ボタンの背景色を初期値の透明に設定しリセット
  background-color: initial;
  // 背景画像を無効にしリセット
  background-image: none;
}

/* 大文字小文字の変換をリセット
ブラウザによっては"TEST BUTTON"が大文字で表示されてしまったり、
"Test Option"の最初の文字だけが大文字で表示されてしまう可能性があるため */
button, select {
  text-transform: none;
}